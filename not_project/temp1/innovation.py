# innovation.py
class GlobalInnovationCounter:
    """
    Глобальний лічильник для присвоєння унікальних інноваційних номерів
    новим генам (зв'язкам або вузлам) під час еволюції.
    """
    def __init__(self):
        self._counter = 0
        # Іноді корисно відстежувати інновації в межах одного покоління,
        # щоб уникнути присвоєння різних номерів тій самій структурній зміні,
        # яка випадково виникла кілька разів. Для базової реалізації це можна опустити.

    def get_new_innovation_number(self):
        """Повертає наступний доступний інноваційний номер."""
        self._counter += 1
        return self._counter

# Створюємо єдиний екземпляр лічильника, який буде використовуватися всією системою
innovation_counter = GlobalInnovationCounter()

#-----------------------------------------------------
# Допоміжна функція для отримання інноваційного номера
#-----------------------------------------------------
def get_innovation_number():
    """Отримує новий інноваційний номер від глобального лічильника."""
    return innovation_counter.get_new_innovation_number()